# How to define  main function and arguments in kotlin 
fun main(args:Array<String>)
{
    var a = 40
    print(a)
    val b = 20
    print(b)
    b = b + 20
    
}

# How to use var 
fun main()
{
    var a = 40
    var b : String
    print(a)
}

# How to use val
fun main()
{
    val kotlin = "hello"
    println(kotlin)
}
//println(kotlin)

# How to define class
class person
{
    var kotlin = "hello"
    fun displayinfo()
    {
        println(kotlin)
    }
}
fun main()
{
    val person = person()
    person.displayinfo()
}

# String interpolation with $
fun main()
{
    val a = 10
    val b = 20
    val result = "sum of $a and $b is ${a + b}"
    println(result)
}

# Character data type
fun main()
{
    val letter: Char
    letter = 'A'
    print("$letter")
    print('\n')
    print('\$')
    print('\\')
}

# String data type
fun main()
{
    var name: String = """
    Kishan
    Kishan
    Kishan
    Kishan
    Kishan""";
    print(name)
}

fun main()
{
    val a=
    print("Kishan\n\tKishan\n\t\tKishan\n\t\t\tKishan\n\t\t")
}

var gem = """
            kishan
       Kishan    Kishan
            Kishan
    """
    print(gem)

# Array data Type
fun main()
{
    //array of integers
    val numbers = arrayOf(1, 2, 3, 4, 5)
    //array of strings
    val words: Array<String> = arrayOf("Kotlin", "Java", "Python")
    //array of squares using Lambda function
    val squares = Array(5) {i -> i * i}
    val firstNumber = numbers[0]
    	val secondWord = words[1]
    println("First number: $firstNumber") //first element
    println("Second word: $secondWord")  //second element
    
    // Modifying elements

    numbers[0] = 10      //modify first number
    words[1] = "Kotlin" //modify second element
    println("Modified first number: ${numbers[0]}")
    println("Modified second word: ${words[1]}")
    //Iterating over arrays
    //using for loop
    println("Numbers array using for loop:")
    for (num in numbers)
    {
        println(num)
    }
}

// Creating 2D array
fun main()
{
    //creating 2D array(matrix)
    val matrix: Array<Array<Int>> = arrayOf(arrayOf(1,2,3), arrayOf(4,5,6), arrayOf(7,8,9))
    println("Element at row 0 column 1: ${matrix[0][1]}")
}

//Kotlin Data type Conversion
//Int to Long conversion using toLong
fun main(args: Array<String>)
{
    val x: Int = 100
    val y: Long = x.toLong()
    println(y)
}

//safe and unsafr]e casting
fun main()
{
    val a = "Hi"
    val b: String = a as String
    println("Unsafe casting result : $b")
    val c : Int = a as? Int
    println("safe casting result : $a")
}

//Operators

fun main() 
{
    println("====Operators====");
    println("\n")
    var a = 10;
    var b = 5;
    println("====Arithmetic-Operators====");
    println("Addition of $a and $b is ${a+b}");
    println("Substraction of $a and $b is ${a-b}");
    println("Multiplication of $a and $b is ${a*b}");
    println("Division of $a and $b is ${a/b}");
	println("Remainder of $a and $b is ${a%b}");
    println("\n\n")
    
    println("====Relational-Operators====");
    var isEqual = (a==b);
    println("$a and $b are Equal \n$isEqual");
    println("---------------------------------")
    var isGreater = (a>b);
    println("$a is greater than $b \n$isGreater");
    println("---------------------------------")
    var isLess = (a<b);
    println("$a is less than $b \n$isLess");
    println("---------------------------------")
    var isGreaterEqual = (a>=b);
    println("$a is greater or equals to $b \n$isGreaterEqual");
    println("---------------------------------")
    var isLessEqual = (a<=b);
    println("$a is less than or equals to $b \n$isLessEqual");
    println("---------------------------------")
    var notEqual = (a!=b);
    println("$a is not equals to $b \n$notEqual")
    println("---------------------------------")
	println("\n\n")
    
    println("====Assignment-Operators====")
    var c = 2
    var d = 3
    c+=d
    println("Updated Value of c is $c")
    d+=c
    println("Updated Value of d is $d")
    c++
    println("Incremented  Value of c is $c")
    d++
    println("Incremented Value of d is $d")
    c--
    println("Decremented  Value of c is $c")
    d--
    println("Decremented Value of d is $d")
    println("\n\n")
    
    println("====BitWise-Operators====")
    //Conjunction (and)
    var BitWiseAnd = a and b
    println("Bit-Wise And Value of $a and $b is $BitWiseAnd")
    //Disjunction (or)
    var BitWiseOr = a or b
    println("Bit-Wise Or Value of $a and $b is $BitWiseOr")
    //Exclusive disjunction (xor)	
    var BitWiseXOR = a xor b
    println("Bit-Wise Xor Value of $a and $b is $BitWiseXOR")
    //Inversion
    var BitWiseInv = a.inv()
    println("Bit-Wise Inverse Value of $a and $b is $BitWiseXOR")
    //Shift Left
    var BitWiseShl = a shl b
    println("Bit-Wise Shift Left Value of $a and $b is $BitWiseShl")
    //Shift Right
    var BitWiseShr = a shr b
    println("Bit-Wise Shift Right Value of $a and $b is $BitWiseShr")
    //Unsigned Shift Right
    var BitWiseUshr = a ushr b
    println("Bit-Wise Unsigned-Shift Right Value of $a and $b is $BitWiseUshr")
    println("\n\n")
   }

// Simple if Statement
fun main()
{
    var temp = 25
    if(temp > 20){
        println("It is a warmer day")
    }
}

// if-else Statement
fun main()
{
    val age = 18
    if(age >= 18){
        println("You are adult")
    }
    else{
        println("You are minor")
    }
}

fun main()
{
    val marks = 84
    if(marks >= 90){
        println("Your Grade is A")
    }
    else if(marks >= 85){
        println("Your Grade is B")
    }
    else if(marks >= 70){
        println("Your Grade is C")
    }
    else(marks < 70){
        println("Your Grade is D")
    }
}

fun main()
{
    val a = 10
    val b = 5
    val Operator = "+"
    if(Operator == "+"){
        println("Result of $a and $b is $(a + b)")
    }
    else if(Operator == "-"){
        println("Result: $(a - b)")
    }
    else if(Operator == "*"){
        println("Result: $(a * b)")
    }
    else if(Operator == "/"){
        if (b != 0){
        println("Result: $(a / b)")
        }else{
            println("Error: Division by zero")
        }
    }
    else{
        println("Error: Unsupported operator")
    }
}

fun main()
{
    val dayofweek = 3
    val dayname = when(dayofweek)
    {
        1 -> "Monday"
        2 -> "Tuesday"
        3 -> "Wednesday"
        4 -> "Thursday"
        5 -> "Friday"
        6 -> "Saturday"
        7 -> "Sunday"
        else -> "Invalid day"
    }
    println("Day of the week: $dayname")
}
fun main(){
val age =15

    if(age<13) {
        println("You are a child.")
    }
        else if(age in 13..19){
            println("you are a teenager")
        }
    else if(age in 20..64){
        println("You are an adult")
    }
    else{
        println("You are a senior")
    }
}

fun main()
{
    val number = 8
    when{
        number % 2 == 0 -> println("$number is even")
        number % 2 != 0 -> println("$number is odd")
        //else -> println("Unexpected number")
    }
}

//For loop
fun main()
{
    for(i in 1..5)
    {
        println("Numbers: $i")
    }
}

fun main()
{
    for(i in 1 until 5) // it will not print 5
    {
        println("Numbers: $i")
    }
}

//Reverse for loop
fun main(args:Array<String>)
{
    for (item in 5 downTo 1)
    {
        println(item)
    }
}

//Reverse with step size
fun main(args: Array<String>)
{
    for(item in 5 downTo 1 step 2)
    {
        println(item)
    }
}

//Iterating over a list
//when only element need to be accessed
fun main()
{
    val fruits = listOf("Apple","Banana","Cherry")
    for(fruit in fruits)
    {
        println(fruit)
    }
}

//when both element and index need to be accessed
fun main()
{
    val fruits = listOf("Apple","Banana","Cherry")
    for(index in fruits.indices)
    {
        println("fruit at index $index: ${fruits[index]}")
    }
}
//while loop
fun main()
{
    var i = 5
    while(i>0){
        println("value is : $i")
        i--
    }
}
//do-while loop
fun main()
{
    var i = 5
    do{
        println("value is: $i")
        i--
    }
    while(i>5)
}

fun main()
{
    var i=5
    do{
        println("value is : $i")
        i--
    }
    while(i>0)
}

fun main()
{
    var i=1
    do{
        println("value is : $i")
        i++
    }
    while(i<=5)
}

//Functions in kotlin - reusable blocks of code that perform a specific task
fun demo()
{
    println("Hello, World!")
}
fun main(args: Array<String>)
{
    demo()
    println("Bye")
}








